HERE ARE ALL OF THE MYSQL FUNCTIONS USED IN THE PROJECT

/---------------------/
DELIMITER $$

CREATE FUNCTION validation_admin(name VARCHAR(50), pass VARCHAR(50)) RETURNS BOOLEAN
BEGIN
	IF((SELECT COUNT(*) FROM Admins a WHERE a.username = name AND a.password = pass) = 0) 
    THEN
    RETURN FALSE;
    ELSE
    RETURN TRUE;
    END IF;
END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER  $$

CREATE FUNCTION save_lib(nam VARCHAR(50), surnam VARCHAR(50), pass VARCHAR(50), em VARCHAR(50), adm INT) RETURNS INT
BEGIN

INSERT INTO Librarians(id, name, surname, password, email, admin_id) VALUES (NULL, nam, surnam, pass, em, adm);
RETURN 1;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION getAdminId(name VARCHAR(50), pass VARCHAR(50)) RETURNS INT
BEGIN
DECLARE xid INT;

SELECT a.id INTO xid FROM Admins a WHERE a.username = name AND a.password = pass;
RETURN xid;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION delete_lib(nam VARCHAR(50), sur VARCHAR(50)) RETURNS BOOLEAN
BEGIN

DELETE FROM Librarians WHERE name = nam AND surname = sur;
RETURN true;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION validation_librarian(email VARCHAR(50), pass VARCHAR(50)) RETURNS BOOLEAN
BEGIN
	IF((SELECT COUNT(*) FROM Librarians l WHERE l.email = email AND l.password = pass) = 0) 
    THEN
    RETURN FALSE;
    ELSE
    RETURN TRUE;
    END IF;
END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION getLibraryId(em VARCHAR(50), pass VARCHAR(50)) RETURNS INT
BEGIN
DECLARE xid INT;

SELECT l.id INTO xid FROM Librarians l WHERE l.email = em AND l.password = pass;
RETURN xid;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER  $$

CREATE FUNCTION new_book(nam VARCHAR(50), descript TEXT, aut_na VARCHAR(50), aut_su VARCHAR(50), adm INT) RETURNS INT
BEGIN
DECLARE xid INT;

INSERT INTO Books(id, name, description, aut_name, aut_surname, rented) VALUES (NULL, nam, descript, aut_na, aut_su, 0);

SELECT b.id INTO xid FROM Books b WHERE b.name = name AND b.aut_surname = aut_su;

INSERT INTO Librarians_Books(id, librarian_id, book_id) VALUES (NULL, adm, xid);

RETURN 1;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION issue_book(nam VARCHAR(50), surn VARCHAR(50), email1 VARCHAR(50), times TIMESTAMP, book_id1 INT) RETURNS BOOLEAN
BEGIN

INSERT INTO Rentals(id, name_user, surname_user, email, timestamp, book_id) VALUES (NULL, nam, surn, email1, times, book_id1);
UPDATE Books SET rented = 1 WHERE id = book_id1;

RETURN TRUE;

END

$$ DELIMITER ;
/---------------------/

/---------------------/
DELIMITER $$

CREATE FUNCTION return_book(emai1 VARCHAR(50), ii INT) RETURNS INT
BEGIN
DECLARE xid_us INT;

SELECT COUNT(id) INTO xid_us FROM Rentals WHERE email = emai1 AND book_id = ii;
IF(xid_us > 0) THEN
UPDATE Books SET rented = 0 WHERE id = ii;
RETURN 1;
ELSE RETURN 0;
END IF;

END

$$ DELIMITER ;
/---------------------/